name: Deploy to AWS

on: [push]

jobs:   
  deploy_test_image:
    runs-on: ubuntu-latest    
    steps:
      - name: log in to dockerhub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: setup Docker buildx
        uses: docker/setup-buildx-action@v1

      - name: build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/cryptoapi:test
  
  run_test:
    needs: deploy_test_image
    runs-on: ubuntu-latest
    
    services:
      mock_api:
        image: huyhoangio/cryptoapi:test
        credentials:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
        env:
          COINBASE_SPOT_ENDPOINT: https://api.coinbase.com/v2/prices/spot?currency=        
        ports:
          - 5000:5000
    
    steps:
      - name: get health from mock_api, fail if the container is not running
        id: test_service_up_and_running
        run: "curl -s  -o /dev/nul -w %{http_code} localhost:5000/health"

      - name: assert
        uses: nick-invision/assert-action@v1
        with:
          expected: 200
          actual: ${{ steps.test_service_up_and_running.outputs.value }}

      - name: get price for not supported currency
        id: test_not_legit_currency
        run: "curl -s  -o /dev/nul -w %{http_code} localhost:5000/VND"
        
      - name: assert
        uses: nick-invision/assert-action@v1
        with:
          expected: 404
          actual: ${{ steps.test_not_legit_currency.outputs.value }}
        

      # - name: image digest
      #   run: echo ${{ steps.docker_build.outputs.digest }}
        
      # - name: set up terraform
      #   uses: hashicorp/setup-terraform@v1

      # - name: Install terraform cli
      #   uses: hashicorp/setup-terraform@v1
      #   with:
      #     terraform_version: 0.12.25
      
      # - name: setup terraform credentials
      #   uses: hashicorp/setup-terraform@v1
      #   with:
      #     cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      
      # - name: terraform format
      #   id: fmt
      #   run: terraform fmt -check

      # - name: terraform init
      #   id: init
      #   run: terraform init

      # - name: terraform validate
      #   id: validate
      #   run: terraform validate -no-color

      # - name: terraform plan
      #   id: plan
      #   run: terraform plan
      